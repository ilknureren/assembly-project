.data
Prompt: .asciiz        "\n Please input value for N = "
Result: .asciiz        "\n The sum of integers from 1 to N is "
FB_num: .asciiz        "\n.You entered a Floating point number. It  has been truncated and we will be using:"
Bye:    .asciiz        "\n *** Adios Amigo - Have a good day***"     .globl                  main
.text
 
main:
 li $v0, 4       # Syscall print string
 la $a0, Prompt  # load address of prompt into $a0
 syscall         # 
 li $v0, 6       # read n into $v0 Outline 18 - number goes to f0
 syscall         # reads the value of N into $v0
 li $t0, 0       # Initialize $t0 to 0
 
#Move the FB number into an integer register, No conversion #t1 is now the ieee - integer representation
mfc1 $t1, $f0
srl $t2, $t1, 23
#Subtract 127 to get the exponent
addi $s3, $t2, -127 #this is the exponent
#Get the fraction
sll $t4, $t1, 9 #Shift out exponent and sign bit
srl $t5, $t4, 9 #Shift back to original position. This will make all previous bits 0
add $t6, $t5, 8388608 #add the implied bit to bit nnumber 8 (2^23)
addi $t7, $s3, 9 #add 9 to the exponent
sllv $s4, $t6, $t7 #by shifting to the left 9 + exponent. if this number NE 0 then there is a fraction. Shifted out the ine
#now get the integer
rol $t4, $t6, $t7 #rotate the bits left by $t7 to get the integer portion in the right most bits
#shift left 31 -exp to zero out the other bits
li $t5, 31
sub $t2, $t5, $s3 #shift the value
sllv $t5, $t4, $t2 #zero out the fraction part
srlv $s5, $t5, $t2 #reset integer bits. integer is in $s5
move $v0, $s5 #move the integer into V0
li $t0, 0 #zero out T0
blez  $t1, End 
Loop:
 add $t0, $t0, $v0 # sum of integers in register &t0
 addi  $v0, $v0, -1 # summing integers in reverse order
 bnez $v0, Loop # branch to loop if $v0 is != 0
 
 
 beq $s4, $0, ENDIF
 li $v0, 4  # system call code for Print String
 la $a0, FB_num # load message if its a floating number
 syscall   # Print the string 
  
 li $v0, 1  # system call code for Print Integer
 move $a0, $s5 # load message if its a floating number (s5)
 syscall     # Print sum of integers
ENDIF:
 li $v0, 4  # system call code for Print String
 la $a0, Result # Print the result
 syscall   # Print the string 
 
 li $v0, 1  # system call code for Print Integer
 move $a0, $t0 # move value to be printed to $a0
 syscall   # Print sum of integers
 b       main  # branch to main
 
End:
 li $v0, 4  #system call code for Print String
 la $a0, Bye # load address of msg. into $a0
 syscall   # print the string
 li $v0, 10  # terminate program run and
 syscall   #return control to system
